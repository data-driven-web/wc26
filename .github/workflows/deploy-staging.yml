name: Deploy to Staging

on:
  push:
    branches: [ "staging-from-main" ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Write the private key from the secret to a file and trust the host
      - name: Prepare SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.STAGING_SSH_KEY }}" > ~/.ssh/wc26.key
          chmod 600 ~/.ssh/wc26.key
          ssh-keyscan -T 20 -H ${{ secrets.STAGING_HOST }} >> ~/.ssh/known_hosts || true

      # Create a clean archive (in parent to avoid catching itself)
      - name: Create release archive
        run: tar -czf ../release.tgz --exclude .git --exclude .github .

      # Upload using ONLY our key
      - name: Upload release archive
        run: |
          scp -i ~/.ssh/wc26.key \
              -o IdentitiesOnly=yes \
              -o StrictHostKeyChecking=no \
              -o UserKnownHostsFile=/dev/null \
              ../release.tgz \
              ${{ secrets.STAGING_USER }}@${{ secrets.STAGING_HOST }}:${{ secrets.STAGING_PATH }}/release.tgz

      # Unpack and run post-deploy on server
      - name: Unpack + post-deploy on server
        run: |
          ssh -i ~/.ssh/wc26.key \
              -o IdentitiesOnly=yes \
              -o StrictHostKeyChecking=no \
              -o UserKnownHostsFile=/dev/null \
              ${{ secrets.STAGING_USER }}@${{ secrets.STAGING_HOST }} << 'EOSSH'
                set -e
                cd /home4/enhancz4/public_html/website_ed220d02/staging/8628
                tar -xzf release.tgz
                rm -f release.tgz
                chmod +x ops/*.sh || true
                ./ops/post_deploy.sh '/usr/local/bin/php' || true
          EOSSH
